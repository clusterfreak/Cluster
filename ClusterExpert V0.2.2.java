import java.lang.String;
/**
 * Cluster Expert<P>
 * Testprogramm zur Demonstration der Clusteranalyse
 * @version 0.2.2 (01.10.2010)
 * @author Thomas Heym
 */
public class ClusterExpert {
// Testobjekte für FCM
  private static double refObject[][] = {{0.2,0.6},{0.2,0.2},{0.4,0.4},
                                         {0.6,0.4},{0.8,0.4},{1.0,0.6},
                                         {1.0,0.2}};
// 2 Kreuze
  private static double test[][] = {{0.2,0.2},{0.2,0.4},{0.4,0.2},
                                    {0.4,0.4},{0.3,0.3},
                                    {0.75,0.75},{0.85,0.85},
                                    {0.85,0.75},{0.75,0.85},
                                    
                                    {0.7,0.7},{0.7,0.9},{0.9,0.7},
                                    {0.9,0.9},{0.8,0.8},
                                    {0.25,0.25},{0.35,0.35},
                                    {0.35,0.25},{0.25,0.35}
                                   };
                                   
  private static double test2[][] = {{0.2,0.2},{0.2,0.4},{0.4,0.2},
                                     {0.4,0.4},
                                     {0.75,0.75},{0.85,0.85},
                                     {0.85,0.75},{0.75,0.85},

                                     {0.7,0.7},{0.7,0.9},{0.9,0.7},
                                     {0.9,0.9},
                                     {0.25,0.25},{0.35,0.35},
                                     {0.35,0.25},{0.25,0.35}
                                    };
                                    
  private static double test3[][] = {{0.2,0.2},{0.2,0.4},{0.4,0.2},
                                     {0.4,0.4},
                                     {0.75,0.75},{0.85,0.85},
                                     {0.85,0.75},{0.75,0.85},

                                     {0.7,0.7},{0.7,0.9},{0.9,0.7},
                                     {0.9,0.9},
                                     {0.25,0.25},{0.35,0.35},
                                     {0.35,0.25},{0.25,0.35},
                                     
                                     {0.9,0.1},{0.8,0.2},{0.9,0.2}
                                    };
                                   
  private static double z[][] = {{0.2,0.6}};
  
  private static double refObject2[][] = {{0.1,0.3},{0.1,0.5},{0.1,0.7},
                                          {0.7,0.3},{0.7,0.7},{0.8,0.5},
                                          {0.9,0.5}};
    private static double smily[][]={
    {0.4,0.2},{0.425,0.2},{0.45,0.2},{0.475,0.2},{0.5,0.2},{0.525,0.2},{0.55,0.2},{0.575,0.2},{0.6,0.2},
    {0.4,0.225},{0.425,0.225},{0.45,0.225},{0.475,0.225},{0.5,0.225},{0.525,0.225},{0.55,0.225},{0.575,0.225},{0.6,0.225},
    {0.4,0.25},{0.425,0.25},{0.45,0.25},{0.475,0.25},{0.5,0.25},{0.525,0.25},{0.55,0.25},{0.575,0.25},{0.6,0.25},

    {0.3,0.25},{0.325,0.25},{0.35,0.25},{0.375,0.25},{0.625,0.25},{0.65,0.25},{0.675,0.25},{0.7,0.25},
    {0.3,0.275},{0.325,0.275},{0.35,0.275},{0.375,0.275},{0.4,0.275},{0.6,0.275},{0.625,0.275},{0.65,0.275},{0.675,0.275},{0.7,0.275},
    {0.3,0.3},{0.325,0.3},{0.35,0.3},{0.375,0.3},{0.4,0.3},{0.6,0.3},{0.625,0.3},{0.65,0.3},{0.675,0.3},{0.7,0.3},

    {0.25,0.3},{0.275,0.3},{0.725,0.3},{0.75,0.3},
    {0.25,0.325},{0.275,0.325},{0.3,0.325},{0.7,0.325},{0.725,0.325},{0.75,0.325},
    {0.25,0.35},{0.275,0.35},{0.3,0.35},{0.7,0.35},{0.725,0.35},{0.75,0.35},
    {0.25,0.375},{0.275,0.375},{0.3,0.375},{0.7,0.375},{0.725,0.375},{0.75,0.375},
    {0.25,0.4},{0.275,0.4},{0.3,0.4},{0.7,0.4},{0.725,0.4},{0.75,0.4},

    {0.2,0.4},{0.225,0.4},{0.775,0.4},{0.8,0.4},
    {0.2,0.425},{0.225,0.425},{0.25,0.425},{0.75,0.425},{0.775,0.425},{0.8,0.425},
    {0.2,0.45},{0.225,0.45},{0.25,0.45},{0.75,0.45},{0.775,0.45},{0.8,0.45},
    {0.2,0.475},{0.225,0.475},{0.25,0.475},{0.75,0.475},{0.775,0.475},{0.8,0.475},
    {0.2,0.5},{0.225,0.5},{0.25,0.5},{0.75,0.5},{0.775,0.5},{0.8,0.5},
    {0.2,0.525},{0.225,0.525},{0.25,0.525},{0.75,0.525},{0.775,0.525},{0.8,0.525},
    {0.2,0.55},{0.225,0.55},{0.25,0.55},{0.75,0.55},{0.775,0.55},{0.8,0.55},
    {0.2,0.575},{0.225,0.575},{0.25,0.575},{0.75,0.575},{0.775,0.575},{0.8,0.575},
    {0.2,0.6},{0.225,0.6},{0.775,0.6},{0.8,0.6},

    {0.25,0.6},{0.275,0.6},{0.3,0.6},{0.7,0.6},{0.725,0.6},{0.75,0.6},
    {0.25,0.625},{0.275,0.625},{0.3,0.625},{0.7,0.625},{0.725,0.625},{0.75,0.625},
    {0.25,0.65},{0.275,0.65},{0.3,0.65},{0.7,0.65},{0.725,0.65},{0.75,0.65},
    {0.25,0.675},{0.275,0.675},{0.3,0.675},{0.7,0.675},{0.725,0.675},{0.75,0.675},
    {0.25,0.7},{0.275,0.7},{0.725,0.7},{0.75,0.7},

    {0.3,0.7},{0.325,0.7},{0.35,0.7},{0.375,0.7},{0.4,0.7},{0.6,0.7},{0.625,0.7},{0.65,0.7},{0.675,0.7},{0.7,0.7},
    {0.3,0.725},{0.325,0.725},{0.35,0.725},{0.375,0.725},{0.4,0.725},{0.6,0.725},{0.625,0.725},{0.65,0.725},{0.675,0.725},{0.7,0.725},
    {0.3,0.75},{0.325,0.75},{0.35,0.75},{0.375,0.75},{0.625,0.75},{0.65,0.75},{0.675,0.75},{0.7,0.75},

    {0.4,0.75},{0.425,0.75},{0.45,0.75},{0.475,0.75},{0.5,0.75},{0.525,0.75},{0.55,0.75},{0.575,0.75},{0.6,0.75},
    {0.4,0.775},{0.425,0.775},{0.45,0.775},{0.475,0.775},{0.5,0.775},{0.525,0.775},{0.55,0.775},{0.575,0.775},{0.6,0.775},
    {0.4,0.8},{0.425,0.8},{0.45,0.8},{0.475,0.8},{0.5,0.8},{0.525,0.8},{0.55,0.8},{0.575,0.8},{0.6,0.8},
// Augen
    {0.35,0.35},{0.375,0.35},{0.4,0.35},{0.425,0.35},{0.45,0.35},{0.55,0.35},{0.575,0.35},{0.6,0.35},{0.625,0.35},{0.65,0.35},
    {0.35,0.375},{0.375,0.375},{0.4,0.375},{0.425,0.375},{0.45,0.375},{0.55,0.375},{0.575,0.375},{0.6,0.375},{0.625,0.375},{0.65,0.375},
    {0.35,0.4},{0.375,0.4},{0.4,0.4},{0.425,0.4},{0.45,0.4},{0.55,0.4},{0.575,0.4},{0.6,0.4},{0.625,0.4},{0.65,0.4},
    {0.35,0.425},{0.375,0.425},{0.4,0.425},{0.425,0.425},{0.45,0.425},{0.55,0.425},{0.575,0.425},{0.6,0.425},{0.625,0.425},{0.65,0.425},
    {0.35,0.45},{0.375,0.45},{0.4,0.45},{0.425,0.45},{0.45,0.45},{0.55,0.45},{0.575,0.45},{0.6,0.45},{0.625,0.45},{0.65,0.45},
// Mund
    {0.3,0.5},{0.325,0.5},{0.35,0.5},{0.65,0.5},{0.675,0.5},{0.7,0.5},
    {0.3,0.525},{0.325,0.525},{0.35,0.525},{0.65,0.525},{0.675,0.525},{0.7,0.525},
    {0.3,0.55},{0.325,0.55},{0.35,0.55},{0.65,0.55},{0.675,0.55},{0.7,0.55},

    {0.375,0.55},{0.4,0.55},{0.6,0.55},{0.625,0.55},
    {0.35,0.575},{0.375,0.575},{0.4,0.575},{0.6,0.575},{0.625,0.575},{0.65,0.575},
    {0.35,0.6},{0.375,0.6},{0.4,0.6},{0.6,0.6},{0.625,0.6},{0.65,0.6},

    {0.425,0.6},{0.45,0.6},{0.475,0.6},{0.5,0.6},{0.525,0.6},{0.55,0.6},{0.575,0.6},
    {0.4,0.625},{0.425,0.625},{0.45,0.625},{0.475,0.625},{0.5,0.625},{0.525,0.625},{0.55,0.625},{0.575,0.625},{0.6,0.625},
    {0.4,0.65},{0.425,0.65},{0.45,0.65},{0.475,0.65},{0.5,0.65},{0.525,0.65},{0.55,0.65},{0.575,0.65},{0.6,0.65},
  };

  public static void main(String[] args) {

    ClusterGraphics cg=new ClusterGraphics(smily);
    cg.setPathOption(true);
    cg.setE(0.0001);
    cg.setCluster(2);
    cg.usePossibilisticCMeans();
    cg.setTitleString("PCM");
    cg.sortCluster();
    cg.fivtyFivtyJoker();
    cg.setDescriptionDisplay(true);
    cg.repaint();
//    cg.setPathOption(true);
//    cg.setTitleString("PCM");
//    cg.usePossibilisticCMeans();
//    cg.sortCluster();
//    cg.fivtyFivtyJoker();
//    cg.repaint();
//    bod.setDurchlauf(1);
//    bod.usePossibilisticCMeans();
//


//    cg.clusterMax();
    
    
//    FuzzyCMeans fcm = new FuzzyCMeans(test3, cluster);
//    fcm.clusterzentrenBestimmen(true);
//    PossibilisticCMeans pcm = new PossibilisticCMeans(test3, cluster, 1);
//    pcm.clusterzentrenBestimmen(true);
//    
//    ClusterGraphics cg_fcm = new ClusterGraphics(test3, "FCM");

    
//    ClusterGraphics cg_pcm = new ClusterGraphics(test3, "PCM");
//    cg_pcm.setCluster(pcm.clusterzentrenBestimmen(true),cluster);
    
//    ClusterFreak cf1 = new ClusterFreak(test3,fcm.getMik(),fcm.clusterzentrenBestimmen(false),cluster);
//    cf1.sortCluster();
//    ClusterGraphics cg_fcm = new ClusterGraphics(cf1.getObject(), cf1.fivtyFivtyJoker(), "FCM");
//    cg_fcm.setCluster(cf1.getVi(),cluster);
//
//    ClusterFreak cf2 = new ClusterFreak(test3,pcm.getMik(),pcm.clusterzentrenBestimmen(false),cluster);
//    cf2.sortCluster();
//    ClusterGraphics cg_pcm = new ClusterGraphics(cf2.getObject(), cf2.fivtyFivtyJoker(), "PCM");
//    cg_pcm.setCluster(cf2.getVi(),cluster);
  }
}

  //Zugehörigkeitswerte des k-ten Elements zum i-ten Cluster wurden durch
  //Zufallszahlen initialisiert
  //mikdemo als Referenz für Testzwecke, mik in clusterzentrenBestimmen
  //private static double mikdemo[][] = {{0.198,0.802},{0.714,0.286},{0.389,0.611},
  //                                     {0.433,0.567},{0.647,0.353},{0.498,0.502},
  //                                     {0.647,0.353}};


